name: Build and Release APK & IPA

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_android:
    runs-on: ubuntu-latest  # This will run on the latest Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK (using Temurin)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build the Android APK
      - name: Build Android APK
        run: ./gradlew :PruebaKotlinMultiplatform:assembleRelease

      # Save the APK to a path
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk
          path: PruebaKotlinMultiplatform/app/build/outputs/apk/release/app-release.apk

  build_ios:
    runs-on: macos-latest  # iOS build needs macOS runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK (using Temurin)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Xcode (necessary for iOS builds)
      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_14.3.app

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build the iOS IPA
      - name: Build iOS IPA
        run: ./gradlew :PruebaKotlinMultiplatform:iosArm64XcodeBuild

      # Save the IPA to a path
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa
          path: PruebaKotlinMultiplatform/app/build/ios/ipa/release/app-release.ipa

  create_release:
    needs: [build_android, build_ios]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            PruebaKotlinMultiplatform/app/build/outputs/apk/release/app-release.apk
            PruebaKotlinMultiplatform/app/build/ios/ipa/release/app-release.ipa
