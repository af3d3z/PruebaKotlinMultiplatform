name: Build and Release APK & IPA

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (using Temurin)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build the Android APK
      - name: Build Android APK
        run: ./gradlew :assembleRelease

      # List files in Android build output
      - name: List files in Android build output
        run: find PruebaKotlinMultiplatform/android/build/outputs -type f

      # Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk
          path: PruebaKotlinMultiplatform/android/build/outputs/apk/release/app-release.apk


  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (using Temurin)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Install Xcode dependencies (including CocoaPods)
      - name: Install CocoaPods dependencies
        run: |
          sudo gem install cocoapods
          pod install --project-directory=PruebaKotlinMultiplatform/ios

      # Build the iOS IPA using xcodebuild
      - name: Build iOS IPA
        run: |
          xcodebuild -workspace PruebaKotlinMultiplatform/ios/composeApp.xcworkspace -scheme composeApp -sdk iphoneos -archivePath $PWD/build/composeApp.xcarchive archive
          xcodebuild -exportArchive -archivePath $PWD/build/composeApp.xcarchive -exportPath $PWD/build/composeApp.ipa -exportOptionsPlist $PWD/ios/ExportOptions.plist

      # List files in iOS build output
      - name: List files in iOS build output
        run: find $PWD/build -type f

      # Upload IPA artifact
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa
          path: $PWD/build/composeApp.ipa
