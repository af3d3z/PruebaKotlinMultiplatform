name: Build and Release Kotlin Multiplatform (iOS & Android)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # iOS Build Job
  build_ios:
    runs-on: macos-latest
    env:
      export_plist_path: iosApp/ExportOptions.plist  # Path to your ExportOptions.plist file

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Xcode
      - name: Set up Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer

      # Install dependencies for iOS (CocoaPods)
      - name: Install CocoaPods dependencies
        run: |
          cd iosApp
          pod install

      # Build the iOS project using Gradle (Kotlin Multiplatform)
      - name: Build iOS using Gradle
        run: |
          ./gradlew :iosApp:build

      # Export IPA from the Xcode archive
      - name: Export IPA for iOS
        run: |
          xcodebuild -workspace iosApp/iosApp.xcworkspace -scheme iosApp -sdk iphoneos -archivePath $PWD/build/iosApp.xcarchive archive
          xcodebuild -exportArchive -archivePath $PWD/build/iosApp.xcarchive -exportOptionsPlist $export_plist_path -exportPath $PWD/build/ios

      # Upload the iOS build artifact (IPA)
      - name: Upload iOS Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: iosApp.ipa
          path: $PWD/build/ios/*.ipa

  # Android Build Job
  build_android:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up JDK 11 for Android build
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Set up Android SDK
      - name: Set up Android SDK
        uses: react-native-community/setup-android@v2

      # Install dependencies for Android (including Gradle wrapper)
      - name: Install Android dependencies
        run: |
          cd android
          ./gradlew clean
          ./gradlew dependencies

      # Build the Android APK using Gradle (Kotlin Multiplatform)
      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease

      # Upload the Android build artifact (APK)
      - name: Upload Android Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: androidApp.apk
          path: android/app/build/outputs/apk/release/*.apk

  # Upload to GitHub Releases
  release:
    runs-on: ubuntu-latest
    needs: [build_ios, build_android]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Get the latest tag (if applicable)
      - name: Get latest release tag
        id: get_release_tag
        run: |
          RELEASE_TAG=$(git describe --tags --abbrev=0)
          echo "::set-output name=release_tag::$RELEASE_TAG"

      # Create GitHub Release
      - name: Create GitHub Release
        uses: gh-cli/gh-actions-release@v1
        with:
          tag_name: ${{ steps.get_release_tag.outputs.release_tag }}
          release_name: "Release ${{ steps.get_release_tag.outputs.release_tag }}"
          body: "This is the release for Kotlin Multiplatform project"
          files: |
            ${{ github.workspace }}/build/ios/*.ipa
            ${{ github.workspace }}/android/app/build/outputs/apk/release/*.apk
