name: Build and Release Kotlin Multiplatform Apps (Android & iOS)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (required for Android builds)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          target: android-33
          gradle: true

      # Build the Android APK
      - name: Build Android APK
        run: ./gradlew assembleRelease

      # List files in the build output directory (to check if the APK was created)
      - name: List files in build output (Android)
        run: find . -name "*.apk"

      # Upload the APK artifact
      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk
          path: ./composeApp/build/outputs/apk/release/composeApp-release-unsigned.apk

  build_ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Find the correct iOS project or workspace file
      - name: Set paths for iOS build
        run: |
          # Search for .xcworkspace and .xcodeproj files in the correct folder
          WORKSPACE_PATH=$(find PruebaKotlinMultiplatform/iosApp -name "*.xcworkspace" -print -quit)
          PROJECT_PATH=$(find PruebaKotlinMultiplatform/iosApp -name "*.xcodeproj" -print -quit)
          
          if [ -n "$WORKSPACE_PATH" ]; then
            echo "Using workspace: $WORKSPACE_PATH"
            echo "workspace_path=$WORKSPACE_PATH" >> $GITHUB_ENV
          elif [ -n "$PROJECT_PATH" ]; then
            echo "Using project: $PROJECT_PATH"
            echo "workspace_path=$PROJECT_PATH" >> $GITHUB_ENV
          else
            echo "No .xcworkspace or .xcodeproj file found in PruebaKotlinMultiplatform/iosApp. Please ensure the correct project files are present."
            exit 1
          fi

          echo "export_plist_path=PruebaKotlinMultiplatform/iosApp/ExportOptions.plist" >> $GITHUB_ENV

      # Archive the iOS app
      - name: Archive the iOS app
        run: |
          # Attempt to build with found workspace or project
          xcodebuild -workspace $workspace_path -scheme composeApp -sdk iphoneos -archivePath $PWD/build/composeApp.xcarchive archive || xcodebuild -project $workspace_path -scheme composeApp -sdk iphoneos -archivePath $PWD/build/composeApp.xcarchive archive

      # Export the IPA from the archive
      - name: Export the IPA
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/composeApp.xcarchive -exportPath $PWD/build/composeApp.ipa -exportOptionsPlist $export_plist_path

      # Upload the IPA artifact
      - name: Upload iOS IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa
          path: $PWD/build/composeApp.ipa

  release:
    needs: [build_android, build_ios]  # Ensure the release happens after both builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Android APK artifact
        uses: actions/download-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk

      - name: Download iOS IPA artifact
        uses: actions/download-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa

      - name: Create Release on GitHub
        run: |
          RELEASE_TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          gh release create $RELEASE_TAG ./composeApp/build/outputs/apk/release/composeApp-release-unsigned.apk ./composeApp.ipa --title "Release $RELEASE_TAG" --notes "Automated release of APK and IPA files"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
