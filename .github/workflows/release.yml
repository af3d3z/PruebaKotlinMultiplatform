name: Build and Release Kotlin Multiplatform Apps (Android & iOS)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          target: android-33
          gradle: true

      - name: Build Android APK
        run: ./gradlew assembleRelease

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk
          path: ./androidApp/build/outputs/apk/release/app-release-unsigned.apk

  build_ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set paths for iOS build
        id: set_paths
        run: |
          WORKSPACE_PATH=$(find iosApp -name "*.xcworkspace" -print -quit)
          PROJECT_PATH=$(find iosApp -name "*.xcodeproj" -print -quit)
          SCHEME_NAME="iosApp" # Replace with your actual scheme name

          if [ -n "$WORKSPACE_PATH" ]; then
            echo "workspace_path=$WORKSPACE_PATH" >> $GITHUB_ENV
          elif [ -n "$PROJECT_PATH" ]; then
            echo "workspace_path=$PROJECT_PATH" >> $GITHUB_ENV
          else
            echo "No .xcworkspace or .xcodeproj file found in iosApp."
            exit 1
          fi

          if [ -z "$SCHEME_NAME" ]; then
            echo "Scheme name is required to build the project."
            exit 1
          fi

          echo "scheme_name=$SCHEME_NAME" >> $GITHUB_ENV
          echo "export_plist_path=iosApp/ExportOptions.plist" >> $GITHUB_ENV

      - name: Archive the iOS app
        run: |
          if [ -n "$WORKSPACE_PATH" ]; then
            xcodebuild -workspace $WORKSPACE_PATH -scheme $scheme_name -sdk iphoneos -archivePath $PWD/build/iosApp.xcarchive archive
          else
            xcodebuild -project $workspace_path -scheme $scheme_name -sdk iphoneos -archivePath $PWD/build/iosApp.xcarchive archive
          fi

      - name: Export the IPA
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/iosApp.xcarchive -exportPath $PWD/build/iosApp -exportOptionsPlist $export_plist_path

      - name: Upload iOS IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa
          path: $PWD/build/iosApp/*.ipa

  release:
    needs: [build_android, build_ios]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Android APK artifact
        uses: actions/download-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk

      - name: Download iOS IPA artifact
        uses: actions/download-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa

      - name: Create Release on GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          gh release create $RELEASE_TAG \
            --title "Release $RELEASE_TAG" \
            --notes "Automated release of APK and IPA files" \
            ./androidApp/build/outputs/apk/release/app-release-unsigned.apk \
            ./build/iosApp/*.ipa
