name: Build and Release Kotlin Multiplatform Apps (Android & iOS)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (required for Android builds)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          target: android-33
          gradle: true

      # Build the Android APK
      - name: Build Android APK
        run: ./gradlew assembleRelease

      # List files in the build output directory (to check if the APK was created)
      - name: List files in build output (Android)
        run: find . -name "*.apk"

      # Upload the APK artifact
      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk
          path: PruebaKotlinMultiplatform/android/build/outputs/apk/release/app-release.apk

  build_ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (required for iOS builds)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Gradle
      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v1
        with:
          gradle-wrapper-version: '8.9'

      # Build the Kotlin Multiplatform project (Android and iOS targets)
      - name: Build the iOS app (Kotlin Multiplatform)
        run: ./gradlew build

      # Find the xcworkspace file dynamically
      - name: Find xcworkspace
        id: find_xcworkspace
        run: |
          WORKSPACE_PATH=$(find . -name "*.xcworkspace" | head -n 1)
          echo "Workspace path: $WORKSPACE_PATH"
          echo "workspace_path=$WORKSPACE_PATH" >> $GITHUB_ENV

      # Find the ExportOptions.plist file dynamically
      - name: Find ExportOptions.plist
        id: find_export_plist
        run: |
          EXPORT_PLIST_PATH=$(find . -name "ExportOptions.plist" | head -n 1)
          echo "ExportOptions.plist path: $EXPORT_PLIST_PATH"
          echo "export_plist_path=$EXPORT_PLIST_PATH" >> $GITHUB_ENV

      # Archive the app and build the IPA using xcodebuild
      - name: Build and export iOS IPA
        run: |
          # Clean the previous build
          xcodebuild clean -workspace ${{ env.workspace_path }} -scheme composeApp -sdk iphoneos

          # Archive the app
          xcodebuild -workspace ${{ env.workspace_path }} -scheme composeApp -sdk iphoneos -archivePath $PWD/build/composeApp.xcarchive archive

          # Export the IPA from the archive
          xcodebuild -exportArchive -archivePath $PWD/build/composeApp.xcarchive -exportPath $PWD/build/composeApp.ipa -exportOptionsPlist ${{ env.export_plist_path }}

      # List files in the build output directory (to check if the IPA was created)
      - name: List files in build output (iOS)
        run: find $PWD/build -type f

      # Upload the IPA artifact
      - name: Upload iOS IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa
          path: $PWD/build/composeApp.ipa
