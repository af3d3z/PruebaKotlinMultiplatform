name: Build and Upload iOS and Android App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_ios:
    runs-on: macos-latest
    
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Xcode (no need for `apple-actions/setup-xcode`, just use `actions/setup-xcode`)
      - name: Set up Xcode
        uses: actions/setup-xcode@v3
        with:
          xcode-version: '15.4'  # Set the correct Xcode version for your project (adjust as needed)

      # Step 3: Set environment variables for workspace and export plist paths
      - name: Set workspace and export plist paths
        run: |
          echo "workspace_path=PruebaKotlinMultiplatform/ios/composeApp.xcworkspace" >> $GITHUB_ENV
          echo "export_plist_path=PruebaKotlinMultiplatform/ios/ExportOptions.plist" >> $GITHUB_ENV

      # Step 4: Build and archive the iOS app
      - name: Build iOS app
        run: |
          # Clean up previous builds if any
          xcodebuild clean -workspace $workspace_path -scheme composeApp -sdk iphoneos

          # Archive the iOS app
          xcodebuild -workspace $workspace_path -scheme composeApp -sdk iphoneos -archivePath $PWD/build/composeApp.xcarchive archive

      # Step 5: Export the IPA file
      - name: Export IPA
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/composeApp.xcarchive -exportPath $PWD/build/composeApp.ipa -exportOptionsPlist $export_plist_path

      # Step 6: List IPA files in the build directory
      - name: List IPA files
        run: |
          echo "Listing IPA files in build directory:"
          ls -al $PWD/build/*.ipa

      # Step 7: Upload the IPA file as an artifact
      - name: Upload iOS IPA artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-ipa
          path: $PWD/build/composeApp.ipa
          if-no-files-found: warn

  build_android:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK for Android build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adoptopenjdk'
          version: '17'

      # Step 3: Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android-sdk@v2
        with:
          api-level: '33'  # Update as necessary
          build-tools: '33.0.0'  # Update as necessary
          target-sdk: '33'

      # Step 4: Build the Android APK
      - name: Build APK
        run: ./gradlew assembleRelease

      # Step 5: List APK files in the Android build directory
      - name: List APK files
        run: |
          echo "Listing APK files in Android build directory:"
          ls -al PruebaKotlinMultiplatform/android/build/outputs/apk/release/*.apk

      # Step 6: Upload the APK as an artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: PruebaKotlinMultiplatform-app-release-apk
          path: PruebaKotlinMultiplatform/android/build/outputs/apk/release/*.apk
          if-no-files-found: warn
