name: Build and Release Android APK

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on tag creation

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 (required for Android builds)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          target: android-33
          gradle: true

      # Build the Android APK
      - name: Build Android APK
        run: ./gradlew assembleRelease

      # List files in the build output directory to confirm the APK is created
      - name: List APK files in build output directory
        run: ls ./androidApp/build/outputs/apk/release/

      # Rename the APK file (only if it's present)
      - name: Rename APK file
        run: |
          if [ -f ./androidApp/build/outputs/apk/release/composeApp-release-unsigned.apk ]; then
            mv ./androidApp/build/outputs/apk/release/composeApp-release-unsigned.apk ./androidApp/build/outputs/apk/release/PruebaKotlinMultiplatform.apk
          else
            echo "APK file not found, skipping rename step"
            exit 1
          fi

      # Upload the renamed APK artifact
      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-app-release-apk
          path: ./androidApp/build/outputs/apk/release/PruebaKotlinMultiplatform.apk

  release_android:
    needs: build_android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the Android APK artifact
      - name: Download Android APK artifact
        uses: actions/download-artifact@v3
        with:
          name: android-app-release-apk
          path: ./androidApp/build/outputs/apk/release/

      # List files in the downloaded directory to verify the APK is available
      - name: List files in the downloaded directory (Android)
        run: ls ./androidApp/build/outputs/apk/release/

      # Authenticate with GitHub CLI using PAT (if needed)
      - name: Authenticate with GitHub CLI
        run: gh auth login --with-token < ${{ secrets.GH_TOKEN }}

      # Extract the tag name from GITHUB_REF and create a GitHub release
      - name: Create Release on GitHub
        run: |
          # Extract the tag name by removing the "refs/tags/" prefix
          RELEASE_TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          
          # Create the release with the renamed APK file
          gh release create $RELEASE_TAG ./androidApp/build/outputs/apk/release/PruebaKotlinMultiplatform.apk --title "Release $RELEASE_TAG" --notes "Automated release of APK file"

        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
